type UtilityMap<T> = HashMap<&'static str, (fn(T) -> i32, fn() -> App<'static, 'static>)>;

fn util_map<T: uucore::Args>() -> UtilityMap<T> {
	let mut map = UtilityMap::new();
	map.insert("base32", (base32::uumain, base32::uu_app));
	map.insert("base64", (base64::uumain, base64::uu_app));
	map.insert("basename", (basename::uumain, basename::uu_app));
	map.insert("basenc", (basenc::uumain, basenc::uu_app));
	map.insert("cat", (cat::uumain, cat::uu_app));
	map.insert("chmod", (chmod::uumain, chmod::uu_app));
	map.insert("cksum", (cksum::uumain, cksum::uu_app));
	map.insert("comm", (comm::uumain, comm::uu_app));
	map.insert("cp", (cp::uumain, cp::uu_app));
	map.insert("csplit", (csplit::uumain, csplit::uu_app));
	map.insert("cut", (cut::uumain, cut::uu_app));
	map.insert("date", (date::uumain, date::uu_app));
	map.insert("dd", (dd::uumain, dd::uu_app));
	map.insert("df", (df::uumain, df::uu_app));
	map.insert("dircolors", (dircolors::uumain, dircolors::uu_app));
	map.insert("dirname", (dirname::uumain, dirname::uu_app));
	map.insert("du", (du::uumain, du::uu_app));
	map.insert("echo", (echo::uumain, echo::uu_app));
	map.insert("env", (env::uumain, env::uu_app));
	map.insert("expand", (expand::uumain, expand::uu_app));
	map.insert("expr", (expr::uumain, expr::uu_app));
	map.insert("factor", (factor::uumain, factor::uu_app));
	map.insert("false", (r#false::uumain, r#false::uu_app));
	map.insert("fmt", (fmt::uumain, fmt::uu_app));
	map.insert("fold", (fold::uumain, fold::uu_app));
	map.insert("hashsum", (hashsum::uumain, hashsum::uu_app_custom));
		map.insert("md5sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("sha1sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("sha224sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("sha256sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("sha384sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("sha512sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("sha3sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("sha3-224sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("sha3-256sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("sha3-384sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("sha3-512sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("shake128sum", (hashsum::uumain, hashsum::uu_app_common));
		map.insert("shake256sum", (hashsum::uumain, hashsum::uu_app_common));
	map.insert("head", (head::uumain, head::uu_app));
	map.insert("join", (join::uumain, join::uu_app));
	map.insert("link", (link::uumain, link::uu_app));
	map.insert("ln", (ln::uumain, ln::uu_app));
	map.insert("ls", (ls::uumain, ls::uu_app));
	map.insert("mkdir", (mkdir::uumain, mkdir::uu_app));
	map.insert("mktemp", (mktemp::uumain, mktemp::uu_app));
	map.insert("mv", (mv::uumain, mv::uu_app));
	map.insert("nl", (nl::uumain, nl::uu_app));
	map.insert("numfmt", (numfmt::uumain, numfmt::uu_app));
	map.insert("od", (od::uumain, od::uu_app));
	map.insert("paste", (paste::uumain, paste::uu_app));
	map.insert("pr", (pr::uumain, pr::uu_app));
	map.insert("printenv", (printenv::uumain, printenv::uu_app));
	map.insert("printf", (printf::uumain, printf::uu_app));
	map.insert("ptx", (ptx::uumain, ptx::uu_app));
	map.insert("pwd", (pwd::uumain, pwd::uu_app));
	map.insert("readlink", (readlink::uumain, readlink::uu_app));
	map.insert("realpath", (realpath::uumain, realpath::uu_app));
	map.insert("relpath", (relpath::uumain, relpath::uu_app));
	map.insert("rm", (rm::uumain, rm::uu_app));
	map.insert("rmdir", (rmdir::uumain, rmdir::uu_app));
	map.insert("seq", (seq::uumain, seq::uu_app));
	map.insert("shred", (shred::uumain, shred::uu_app));
	map.insert("shuf", (shuf::uumain, shuf::uu_app));
	map.insert("sleep", (sleep::uumain, sleep::uu_app));
	map.insert("sort", (sort::uumain, sort::uu_app));
	map.insert("split", (split::uumain, split::uu_app));
	map.insert("sum", (sum::uumain, sum::uu_app));
	map.insert("tac", (tac::uumain, tac::uu_app));
	map.insert("tail", (tail::uumain, tail::uu_app));
	map.insert("tee", (tee::uumain, tee::uu_app));
	map.insert("tr", (tr::uumain, tr::uu_app));
	map.insert("true", (r#true::uumain, r#true::uu_app));
	map.insert("truncate", (truncate::uumain, truncate::uu_app));
	map.insert("tsort", (tsort::uumain, tsort::uu_app));
	map.insert("uname", (uname::uumain, uname::uu_app));
	map.insert("unexpand", (unexpand::uumain, unexpand::uu_app));
	map.insert("uniq", (uniq::uumain, uniq::uu_app));
	map.insert("test", (uu_test::uumain, uu_test::uu_app));
		map.insert("[", (uu_test::uumain, uu_test::uu_app));
	map.insert("wc", (wc::uumain, wc::uu_app));
map
}
